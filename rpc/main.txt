pipeline {
    agent any

    parameters {
        choice(name: 'ServerName', choices: ['zzh_s1', 'zzh_s2'], description: '服务器名称')
    }

    environment{
        def server = ''
    }   


    stages {
        stage('初始化') {
            steps{
                script{
                    switch (params.ServerName) {
                        case "zzh_s1":
                            server = zzh_s1()
                            break
                        case "zzh_s2":
                            server = zzh_s1()
                            break
                    }
                }
            }
        }

        stage('远程登陆') {
            steps {
                script {
                    def remote = [:]
                    remote.name = server.name
                    remote.host = server.host
                    remote.allowAnyHosts = server.allowAnyHosts
                    withCredentials([
                        sshUserPrivateKey(
                            credentialsId: 'b15e628f-4f03-4058-bdc2-0136151171b0',
                            keyFileVariable: 'identity',
                            passphraseVariable: '',
                            usernameVariable: server.user)
                        ])
                    {
                        remote.user = 'ubuntu'
                        remote.identityFile = identity
                        sshCommand remote: remote, command:
                            '''
                            for i in {1..5}; do echo -n "Loop $i "; date ; sleep 1; done
                            '''
                        sshPut remote: remote, from: 'abc.sh', into: '.'
                        sshGet remote: remote, from: 'abc.sh', into: 'bac.sh', override: true
                        sshScript remote: remote, script: 'abc.sh'
                        sshRemove remote: remote, path: 'abc.sh'
                    }
                }
            }
        }
    }

}

def zzh_s1(){
    def remote = [:]
    remote.name = "zzh_s1"
    remote.host = "192.168.6.12"
    remote.allowAnyHosts = true
    remote.user = "ubuntu"
    return remote
}